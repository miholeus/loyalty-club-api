imports:
   - { resource: "services/repositories.yml" }
   - { resource: "services/registration.yml" }
   - { resource: "services/events.yml" }
   - { resource: "services/forms.yml" }
   - { resource: "services/menu.yml" }
   - { resource: "services/upload.yml" }

services:
    core.encoder.json:
        class: Symfony\Component\Serializer\Encoder\JsonEncoder
    core.serializer.default:
        class: Symfony\Component\Serializer\Serializer
        arguments:
            0:
                - '@serializer.normalizer.object'
            1:
                - '@core.encoder.json'
    twig.extension.dialog:
        class: Zenomania\CoreBundle\Twig\Extension\Dialog\Confirm
        public: false
        tags:
            - { name: twig.extension }
    core.doctrine.entity_listener_resolver:
        class: Zenomania\CoreBundle\Doctrine\EntityListenerResolver
        arguments: [ "@service_container" ]
    user.listener:
        class: Zenomania\CoreBundle\Entity\Listener\UserListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.orm.entity_listener }
    player.listener:
        class: Zenomania\CoreBundle\Entity\Listener\PlayerListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.orm.entity_listener }
    core.user_aware_service:
        class: Zenomania\CoreBundle\Service\UserAwareService
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage', '@event.notification_manager']
    user.service:
        class:  Zenomania\CoreBundle\Service\User
        parent: core.user_aware_service
        calls:
          - ['setPasswordEncoder', ['@security.password_encoder']]
    security.authentication.success_handler:
        class: Zenomania\CoreBundle\Service\Handler\AuthenticationSuccessHandler
        arguments: ['@security.http_utils', '@service_container', {}]
        tags:
            - { name: 'monolog.logger', channel: 'security'}
    security.email_password_recovery:
        class: Zenomania\CoreBundle\Service\EmailPasswordRecoveryService
        arguments: ['@swiftmailer.mailer', '@templating.engine.twig', '%mailer_user%']
    images.service:
        class: Zenomania\CoreBundle\Service\Images
        parent: core.user_aware_service
    utils.host_based_url:
        class: Zenomania\CoreBundle\Service\Utils\HostBasedUrl
        arguments: ['@request_stack']
    entity.serializer:
        class: Zenomania\CoreBundle\Service\EntitySerializer
        arguments: ['@doctrine.orm.entity_manager']
    breadcrumbs.service:
        class: Zenomania\CoreBundle\Service\BreadcrumbsService
        arguments: ['@knp_menu.helper', '@knp_menu.matcher']
    breadcrumb.annotation_listener:
        class: Zenomania\CoreBundle\Event\Listener\BreadcrumbAnnotationListener
        arguments: ['@annotation_reader', '@breadcrumbs.service']
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
    player.service:
        class: Zenomania\CoreBundle\Service\Player
        parent: core.user_aware_service
        calls:
            - ['setUploadService', ['@file.upload_player_photo']]
            - ['setImageService', ['@images.service']]
    event.service:
        class: Zenomania\ApiBundle\Service\Events
        arguments: ['@repository.event_repository', '@doctrine.orm.entity_manager']
    event_forecast.service:
        class: Zenomania\ApiBundle\Service\EventForecast
        arguments: ['@repository.event_forecast_repository', '@repository.event_player_forecast_repository']
    transfer_actor.service:
        class: Zenomania\CoreBundle\Service\TransferActorService
        arguments: ['@doctrine.orm.entity_manager']
    promocoupon.service:
        class: Zenomania\CoreBundle\Service\PromoCouponService
        parent: core.user_aware_service
    promocoupon.parser:
        class: Zenomania\CoreBundle\Service\PromoCouponParser
    badge.service:
        class: Zenomania\CoreBundle\Service\Badge
        parent: core.user_aware_service
        calls:
            - ['setUploadService', ['@file.upload_badge_photo']]
            - ['setImageService', ['@images.service']]
    user_badge.service:
        class: Zenomania\CoreBundle\Service\UserBadge
        arguments: ['@repository.user_badge_repository','@repository.badge_repository']