<?php

namespace Zenomania\CoreBundle\Repository\Document;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ODM\MongoDB\DocumentRepository;
use Zenomania\CoreBundle\Document\ProviderEvent;

/**
 * ProviderEventRepository
 *
 * This class was generated by the Doctrine ODM. Add your own custom
 * repository methods below.
 */
class ProviderEventRepository extends DocumentRepository
{
    public function addIfNotExist(ArrayCollection $collection)
    {
        /** @var ProviderEvent $event */
        foreach ($collection as $event) {
            if (!$this->exists($event->getEventId())) {
                $this->dm->persist($event);
            }
        }
        $this->dm->flush();
    }

    /**
     * Checks if event id already exists
     *
     * @param int $eventId
     * @return bool
     */
    protected function exists(int $eventId): bool
    {
        $result = $this->getDocumentManager()->createQueryBuilder('ZenomaniaCoreBundle:ProviderEvent')
            ->field('event_id')->equals($eventId)->count()->getQuery()->execute();

        return $result !== 0;
    }
}
